@model Presentacion.Models.RecursoVM

@{
    ViewBag.Title = "Editar Recurso";
}

<h2>Editar Recurso</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Recurso</legend>

        @Html.HiddenFor(model => model.Id)

        <!-- Codigo -->
        <div class="editor-label">
            @Html.LabelFor(model => model.Codigo)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Codigo)
            @Html.ValidationMessageFor(model => model.Codigo)
        </div>

        <!-- Nombre -->
        <div class="editor-label">
            @Html.LabelFor(model => model.Nombre)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Nombre)
            @Html.ValidationMessageFor(model => model.Nombre)
        </div>

        <!-- Tipo -->
        <div class="editor-label">
            @Html.Label("Tipo")
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.TipoId, Model.SelectTiposDeRecursos)
        </div>

        <!-- Descripcion -->
        <div class="editor-label">
            @Html.LabelFor(model => model.Descripcion)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Descripcion)
            @Html.ValidationMessageFor(model => model.Descripcion)
        </div>

        <!-- Caracteristicas -->
        <div class="editor-label">
            @Html.Label("Caracteristicas")
        </div>

        <div id="characteristics-container">
            @foreach (var tipoCaracteristica in Model.Tipo.TiposDeCaracteristicas)
            {
                var index = Model.CaracteristicasTipo.IndexOf(tipoCaracteristica.Id.ToString());

                <div class="editor-label">
                    <input name='CaracteristicasTipo' value='@tipoCaracteristica.Id' type="hidden">
                    @Html.Label(tipoCaracteristica.Nombre)
                </div>
                <div class="editor-field">
                    @if (index != -1)
                    {
                        @Html.EditorFor(model => Model.CaracteristicasValor[index])
                    }
                    else
                    {
                        <input type='text' name='CaracteristicasValor' />
                    }
                </div>
            }
        </div>

        <p>
            <input type="submit" value="Guardar" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Volver al listado", "Index")
</div>

<script type="text/template" id="characteristic-template">
    <div class='editor-label'>
        <input name='CaracteristicasTipo' value='{{TipoId}}' type="hidden">
        <label for='{{CharacteristicName}}'>{{CharacteristicName}}</label>
    </div>

    <div class='editor-field'>
        <input type='text' name='CaracteristicasValor' />
    </div>
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/recursos-utilities.js")

    <script type="text/javascript">
        // Obtener tipos de recursos y registar evento para el cambio de tipo de recurso
        $(document).ready(
            function () {
                ObtenerTiposDeRecursos();

                UpdateCaracteristicasNames();

                $('#TipoId').on('change', CambiarTiposDeRecursos);
            }
        );
    </script>
}
